/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.csu.ui;

import java.awt.Font;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import jpcap.JpcapCaptor;
import jpcap.NetworkInterface;
import jpcap.packet.IPPacket;
import jpcap.packet.Packet;

/**
 *
 * @author csu_cangkui
 */
public class IPPacketsMainFrame extends javax.swing.JFrame {
    
//    private ArrayList<StringBuffer> sb_list = new ArrayList();
    
    private CatchPacket catchPacket;
    
    private NetworkInterface nowInterface;
    
    private static final int CAPLEN = 1512;
    
    private static final int TIMEOUT = 50;
    
    private boolean promiscCheck = true;
    
    //private JpcapCaptor jpcap = null;
    
    private Thread runThread;
    
    private int i = 0;

    /** Creates new form IPPacketsMainFrame */
    public IPPacketsMainFrame() {
        this.setTitle("IP Packects Cratcher");
        initComponents();
        initWork();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        control = new javax.swing.JToolBar();
        btn_start = new java.awt.Button();
        gaplabel = new java.awt.Label();
        btn_stop = new java.awt.Button();
        gaplabel1 = new java.awt.Label();
        btn_conf = new java.awt.Button();
        main_content = new javax.swing.JTabbedPane();
        detail_list = new javax.swing.JPanel();
        detail = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        detail_info = new javax.swing.JTextPane();
        list = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ip_list = new javax.swing.JTable();
        conf_panel = new javax.swing.JPanel();
        instructions = new javax.swing.JPanel();
        ins_info = new javax.swing.JLabel();
        ins_info1 = new javax.swing.JLabel();
        ins_info2 = new javax.swing.JLabel();
        ins_info3 = new javax.swing.JLabel();
        ins_info4 = new javax.swing.JLabel();
        ins_info5 = new javax.swing.JLabel();
        ins_info6 = new javax.swing.JLabel();
        ins_info7 = new javax.swing.JLabel();
        ins_info8 = new javax.swing.JLabel();
        configurations = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        net_inter_list = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        workmode_list = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        menu_list = new javax.swing.JMenuBar();
        menu_sys = new javax.swing.JMenu();
        save_file = new javax.swing.JMenuItem();
        open_file = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        menu_cap = new javax.swing.JMenu();
        menu_conf = new javax.swing.JMenuItem();
        menu_start = new javax.swing.JMenuItem();
        menu_stop = new javax.swing.JMenuItem();
        NetCard = new javax.swing.JMenuItem();
        menu_help = new javax.swing.JMenu();
        menu_about = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        control.setRollover(true);

        btn_start.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        btn_start.setLabel("Start");
        btn_start.setMaximumSize(new java.awt.Dimension(57, 32767));
        btn_start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_startMouseClicked(evt);
            }
        });
        control.add(btn_start);

        gaplabel.setMaximumSize(new java.awt.Dimension(7, 32767));
        gaplabel.setMinimumSize(new java.awt.Dimension(7, 22));
        gaplabel.setText("  ");
        control.add(gaplabel);

        btn_stop.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        btn_stop.setLabel("Stop");
        btn_stop.setMaximumSize(new java.awt.Dimension(57, 32767));
        btn_stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_stopMouseClicked(evt);
            }
        });
        control.add(btn_stop);

        gaplabel1.setMaximumSize(new java.awt.Dimension(7, 32767));
        gaplabel1.setMinimumSize(new java.awt.Dimension(7, 22));
        gaplabel1.setText("  ");
        control.add(gaplabel1);

        btn_conf.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        btn_conf.setLabel("Config");
        btn_conf.setMaximumSize(new java.awt.Dimension(57, 32767));
        btn_conf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_confMouseClicked(evt);
            }
        });
        control.add(btn_conf);

        main_content.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N

        detail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detailed Infomation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 0, 18))); // NOI18N
        detail.setMinimumSize(new java.awt.Dimension(0, 86));

        detail_info.setEditable(false);
        detail_info.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jScrollPane2.setViewportView(detail_info);

        javax.swing.GroupLayout detailLayout = new javax.swing.GroupLayout(detail);
        detail.setLayout(detailLayout);
        detailLayout.setHorizontalGroup(
            detailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        detailLayout.setVerticalGroup(
            detailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        list.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "IP Packet List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 0, 18))); // NOI18N

        ip_list.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        ip_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "UDP", "2021-6-11 15:23:16"},
                {"2", "TCP", "2021-6-11 15:23:16"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Identifier", "Protocol", "Catch Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ip_list.setRowHeight(30);
        ip_list.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(ip_list);
        if (ip_list.getColumnModel().getColumnCount() > 0) {
            ip_list.getColumnModel().getColumn(0).setResizable(false);
            ip_list.getColumnModel().getColumn(1).setResizable(false);
            ip_list.getColumnModel().getColumn(2).setResizable(false);
            ip_list.getColumnModel().getColumn(2).setPreferredWidth(140);
        }

        javax.swing.GroupLayout listLayout = new javax.swing.GroupLayout(list);
        list.setLayout(listLayout);
        listLayout.setHorizontalGroup(
            listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
        );
        listLayout.setVerticalGroup(
            listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout detail_listLayout = new javax.swing.GroupLayout(detail_list);
        detail_list.setLayout(detail_listLayout);
        detail_listLayout.setHorizontalGroup(
            detail_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detail_listLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(detail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        detail_listLayout.setVerticalGroup(
            detail_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detail_listLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detail_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(detail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        main_content.addTab("detail & list", detail_list);

        instructions.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "instructions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 0, 18))); // NOI18N

        ins_info.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ins_info.setText("- How to start using ? ");
        ins_info.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ins_info1.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ins_info1.setText("  1. Make up your configurations;");
        ins_info1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ins_info2.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ins_info2.setText("  2. Return to detail & list page;");
        ins_info2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ins_info3.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ins_info3.setText("  1. No catched pakects:");
        ins_info3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ins_info4.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ins_info4.setText("- Questions & problems ? ");
        ins_info4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ins_info5.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ins_info5.setText("  3. Click \"Start\" button to start catching;");
        ins_info5.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ins_info6.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ins_info6.setText("     Try to change an interface and restart.");
        ins_info6.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ins_info7.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ins_info7.setText("  2. Program dosen't response:");
        ins_info7.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ins_info8.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ins_info8.setText("     Close and open the program again.");
        ins_info8.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout instructionsLayout = new javax.swing.GroupLayout(instructions);
        instructions.setLayout(instructionsLayout);
        instructionsLayout.setHorizontalGroup(
            instructionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instructionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(instructionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ins_info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ins_info1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ins_info2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ins_info3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ins_info4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ins_info6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ins_info5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ins_info7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ins_info8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        instructionsLayout.setVerticalGroup(
            instructionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instructionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ins_info, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ins_info1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ins_info2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ins_info5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ins_info4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ins_info3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ins_info6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ins_info7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ins_info8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        configurations.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Configurations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 0, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabel1.setText("Choose the Network Interface:");

        net_inter_list.setFont(new java.awt.Font("Courier New", 0, 16)); // NOI18N
        net_inter_list.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                net_inter_listItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabel2.setText("Choose the Work Mode:");

        jLabel3.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabel3.setText("Set Filter:");

        workmode_list.setFont(new java.awt.Font("Courier New", 0, 16)); // NOI18N
        workmode_list.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "promiscuous mode", "optimized mode" }));

        jTextField1.setFont(new java.awt.Font("Courier New", 0, 16)); // NOI18N
        jTextField1.setText("Input here");

        javax.swing.GroupLayout configurationsLayout = new javax.swing.GroupLayout(configurations);
        configurations.setLayout(configurationsLayout);
        configurationsLayout.setHorizontalGroup(
            configurationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configurationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configurationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addComponent(net_inter_list, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(workmode_list, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        configurationsLayout.setVerticalGroup(
            configurationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configurationsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(net_inter_list, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workmode_list, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout conf_panelLayout = new javax.swing.GroupLayout(conf_panel);
        conf_panel.setLayout(conf_panelLayout);
        conf_panelLayout.setHorizontalGroup(
            conf_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conf_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(configurations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(instructions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        conf_panelLayout.setVerticalGroup(
            conf_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conf_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(conf_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(configurations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(instructions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        main_content.addTab("Configure", conf_panel);

        menu_list.setPreferredSize(new java.awt.Dimension(117, 33));

        menu_sys.setText("System");
        menu_sys.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        menu_sys.setMaximumSize(new java.awt.Dimension(100, 32800));
        menu_sys.setMinimumSize(new java.awt.Dimension(50, 30));
        menu_sys.setPreferredSize(new java.awt.Dimension(35, 30));

        save_file.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        save_file.setText("Save");
        save_file.setPreferredSize(new java.awt.Dimension(100, 30));
        save_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_fileActionPerformed(evt);
            }
        });
        menu_sys.add(save_file);

        open_file.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        open_file.setText("Open");
        open_file.setPreferredSize(new java.awt.Dimension(100, 30));
        open_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                open_fileActionPerformed(evt);
            }
        });
        menu_sys.add(open_file);

        exit.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        exit.setText("Exit");
        exit.setPreferredSize(new java.awt.Dimension(100, 30));
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        menu_sys.add(exit);

        menu_list.add(menu_sys);

        menu_cap.setText("Capture");
        menu_cap.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        menu_cap.setMaximumSize(new java.awt.Dimension(100, 32800));
        menu_cap.setMinimumSize(new java.awt.Dimension(50, 30));
        menu_cap.setPreferredSize(new java.awt.Dimension(39, 30));

        menu_conf.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        menu_conf.setText("Configure");
        menu_conf.setPreferredSize(new java.awt.Dimension(100, 30));
        menu_conf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_confActionPerformed(evt);
            }
        });
        menu_cap.add(menu_conf);

        menu_start.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        menu_start.setText("Start");
        menu_start.setPreferredSize(new java.awt.Dimension(100, 30));
        menu_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_startActionPerformed(evt);
            }
        });
        menu_cap.add(menu_start);

        menu_stop.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        menu_stop.setText("Stop");
        menu_stop.setPreferredSize(new java.awt.Dimension(100, 30));
        menu_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_stopActionPerformed(evt);
            }
        });
        menu_cap.add(menu_stop);

        NetCard.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        NetCard.setText("Network Card Information");
        NetCard.setPreferredSize(new java.awt.Dimension(100, 30));
        NetCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetCardActionPerformed(evt);
            }
        });
        menu_cap.add(NetCard);

        menu_list.add(menu_cap);

        menu_help.setText("Help");
        menu_help.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        menu_help.setMaximumSize(new java.awt.Dimension(100, 32800));
        menu_help.setMinimumSize(new java.awt.Dimension(50, 30));
        menu_help.setPreferredSize(new java.awt.Dimension(39, 30));

        menu_about.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        menu_about.setText("About");
        menu_about.setPreferredSize(new java.awt.Dimension(100, 30));
        menu_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_aboutActionPerformed(evt);
            }
        });
        menu_help.add(menu_about);

        menu_list.add(menu_help);

        setJMenuBar(menu_list);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(control, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(main_content, javax.swing.GroupLayout.PREFERRED_SIZE, 986, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(control, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(main_content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void net_inter_listItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_net_inter_listItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_net_inter_listItemStateChanged

    private void btn_startMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_startMouseClicked
        // TODO add your handling code here:
        startCatching();
    }//GEN-LAST:event_btn_startMouseClicked

    private void btn_stopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_stopMouseClicked
        // TODO add your handling code here:
        stopCatching();
    }//GEN-LAST:event_btn_stopMouseClicked

    private void btn_confMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_confMouseClicked
        // TODO add your handling code here:
        main_content.setSelectedIndex(1);
    }//GEN-LAST:event_btn_confMouseClicked

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void menu_confActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_confActionPerformed
        // TODO add your handling code here:
        main_content.setSelectedIndex(1);
    }//GEN-LAST:event_menu_confActionPerformed

    private void menu_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_startActionPerformed
        // TODO add your handling code here:
        startCatching();
    }//GEN-LAST:event_menu_startActionPerformed

    private void menu_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_stopActionPerformed
        // TODO add your handling code here:
        stopCatching();
    }//GEN-LAST:event_menu_stopActionPerformed

    private void menu_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_aboutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menu_aboutActionPerformed

    private void NetCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetCardActionPerformed
        // TODO add your handling code here:
        if (catchPacket!=null) {
            catchPacket.desNetworkInterface();
            detail_info.setText("");
            String s = catchPacket.sb.toString();
            detail_info.setText(s);
        }
    }//GEN-LAST:event_NetCardActionPerformed

    private void save_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_fileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_save_fileActionPerformed

    private void open_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open_fileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_open_fileActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String Stringargs[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IPPacketsMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IPPacketsMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IPPacketsMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IPPacketsMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IPPacketsMainFrame().setVisible(true);
            }
        });
    }
    
    public void initWork() {
        catchPacket = new CatchPacket();
        // get devices and they are stored in catchPacket's property--devices
        catchPacket.getDevices();
        setDevicesChoices();
        // set modes
        setMode();
        // init components
        clearData();
        getJPcapConnection();
        setTableListener();
    }
    
    // init devices choices and nowInterface
    public void setDevicesChoices() {
        if (catchPacket!=null) {
            net_inter_list.removeAllItems();
            int i = 1;
            for (NetworkInterface n : catchPacket.devices) {
                net_inter_list.addItem(i+"-"+n.description);
                i++;
            }
            // nowInterface default
            // 注意这里在电脑连接WiFi与接入网线时可用的接口不同
            nowInterface = catchPacket.devices[3];
            catchPacket.device = catchPacket.devices[3];
            catchPacket.chooseDevice = catchPacket.devices[3];
            
            net_inter_list.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                    if (e.getStateChange() == ItemEvent.SELECTED) {
                        // get selected index, and then update nowInterface
                        // System.out.println(catchPacket.devices[net_inter_list.getSelectedIndex()].description);
                        nowInterface = catchPacket.devices[net_inter_list.getSelectedIndex()];
                        catchPacket.device = catchPacket.devices[net_inter_list.getSelectedIndex()];
                        catchPacket.chooseDevice = catchPacket.devices[net_inter_list.getSelectedIndex()];
                    }
                }
            });
        } else {
            nowInterface = null;
        }
    }
    
    public void getJPcapConnection() {
        if (nowInterface!=null && catchPacket!=null) {
            try {
                // 0 or 1
                catchPacket.jCaptor = JpcapCaptor.openDevice(nowInterface, CAPLEN, promiscCheck, TIMEOUT);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
    
    public void setMode() {
        if (catchPacket!=null) {
            catchPacket.chooseMode = true;
            workmode_list.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                    if (e.getStateChange() == ItemEvent.SELECTED) {
                        // get selected index, and then update nowInterface
                        // System.out.println(net_inter_list.getSelectedIndex());
                        catchPacket.chooseMode = workmode_list.getSelectedIndex()==0;
                    }
                }
            });
        }
    }
    
    public void startCatching() {
        runThread = new MyThread();
        runThread.start();
    }
    
    public void stopCatching() {
        if (runThread.isAlive()) {
            runThread.interrupt();
        }
    }
    
    public void changeConf() {
        
    }
    
    public void clearData() {
        ip_list.getTableHeader().setFont(new Font("Courier New", Font.BOLD,16));
        DefaultTableModel model = (DefaultTableModel) ip_list.getModel();
        while(model.getRowCount()>0) {
            model.removeRow(0);
        }
        ip_list.setModel(model);
        detail_info.setText("");
    }
    
    public void funcCatching() throws InterruptedException{
        //catchPacket.jCaptor.processPacket(1, catchPacket);
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date nowDate = new Date();
        DefaultTableModel model = (DefaultTableModel) ip_list.getModel();
        Vector rowData = null;
        StringBuffer prot;
        
        while (true) {
            Packet packet = catchPacket.jCaptor.getPacket();
            Thread.sleep(1000);
            if (packet!=null) {
                nowDate.setTime(System.currentTimeMillis());
                System.out.println("-------------------第"+i+"个包，抓取时间"+sdf.format(nowDate)+"---------------------");
                catchPacket.receivePacket(packet);
                
                prot = new StringBuffer(catchPacket.protocol);
                rowData = new Vector();
                rowData.add(0, i+1);
                rowData.add(1, prot);
                rowData.add(2, sdf.format(nowDate));
                model.addRow(rowData);
                
                //addDataToTable(rowData, model, sdf.format(nowDate));
                detail_info.setText("");
                detail_info.setText(catchPacket.sb.toString());
                i++;
            }
        }
        
    }
    
    public void setTableListener() {
        ip_list.addMouseListener(new MouseListener() {
            @Override
            public void mouseReleased(MouseEvent e) {}

            @Override
            public void mousePressed(MouseEvent e) {}

            @Override
            public void mouseExited(MouseEvent e) {}

            @Override
            public void mouseEntered(MouseEvent e) {}

            @Override
            public void mouseClicked(MouseEvent e) {
                // 点击几次，这里是双击事件
                if (e.getClickCount() == 2) {
                    int row = ip_list.getSelectedRow();
                    if (catchPacket!=null && row<catchPacket.sb_list.size()) {
                        // System.out.println(catchPacket.sb_list.get(row));
                        System.out.println(catchPacket.sb_list.get(row));
                        detail_info.setText("");
                        detail_info.setText(catchPacket.sb_list.get(row).toString());
                    }
                }
            }
        });
    }
    
    class MyThread extends Thread {
        @Override
        public void run() {
            try {
                funcCatching();
            }catch (InterruptedException e) {
                e.printStackTrace();
                this.stop();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem NetCard;
    private java.awt.Button btn_conf;
    private java.awt.Button btn_start;
    private java.awt.Button btn_stop;
    private javax.swing.JPanel conf_panel;
    private javax.swing.JPanel configurations;
    private javax.swing.JToolBar control;
    private javax.swing.JPanel detail;
    private javax.swing.JTextPane detail_info;
    private javax.swing.JPanel detail_list;
    private javax.swing.JMenuItem exit;
    private java.awt.Label gaplabel;
    private java.awt.Label gaplabel1;
    private javax.swing.JLabel ins_info;
    private javax.swing.JLabel ins_info1;
    private javax.swing.JLabel ins_info2;
    private javax.swing.JLabel ins_info3;
    private javax.swing.JLabel ins_info4;
    private javax.swing.JLabel ins_info5;
    private javax.swing.JLabel ins_info6;
    private javax.swing.JLabel ins_info7;
    private javax.swing.JLabel ins_info8;
    private javax.swing.JPanel instructions;
    private javax.swing.JTable ip_list;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel list;
    private javax.swing.JTabbedPane main_content;
    private javax.swing.JMenuItem menu_about;
    private javax.swing.JMenu menu_cap;
    private javax.swing.JMenuItem menu_conf;
    private javax.swing.JMenu menu_help;
    private javax.swing.JMenuBar menu_list;
    private javax.swing.JMenuItem menu_start;
    private javax.swing.JMenuItem menu_stop;
    private javax.swing.JMenu menu_sys;
    private javax.swing.JComboBox<String> net_inter_list;
    private javax.swing.JMenuItem open_file;
    private javax.swing.JMenuItem save_file;
    private javax.swing.JComboBox<String> workmode_list;
    // End of variables declaration//GEN-END:variables

}
